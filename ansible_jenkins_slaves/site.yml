---
- hosts: all
  sudo: True
  roles:
    - role: angstwad.docker_ubuntu 
    - role: postgres
      tags:
        - postgres
- hosts: all 
  sudo: True
  tasks:
  - name: ensure maven is installed
    apt: name=maven state=installed update_cache=yes
  - name: ensure git is installed
    apt: name=git state=installed
  - name: Add JRE ppa
    apt_repository: repo="deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" state=present
  - name: Automatically select the Oracle License
    shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
  - name: Install JRE
    apt: pkg=oracle-java7-installer state=latest update-cache=yes force=yes
  - name: setup SSH keys
    authorized_key: user=ubuntu
                    key="{{ item }}"
    with_file:
    - files/public_keys/jenkins

  - name: Create .m2 folder
    file: path=/home/ubuntu/.m2 state=directory owner=ubuntu
  - name: Copy maven configuration
    copy: src=files/settings.xml dest=/home/ubuntu/.m2/ owner=ubuntu 

  - name: Create .seqware folder
    file: path=/home/ubuntu/.seqware state=directory owner=ubuntu
  - name: Copy seqware configuration
    copy: src=files/settings dest=/home/ubuntu/.seqware/ owner=ubuntu

  - name: Set hostname
    hostname: name={{ansible_hostname}}

  # fix up hostname --fqdn call needed for JUnique library
  - name: Build hosts file entry for hostname
    lineinfile: dest=/etc/hosts line="127.0.0.1 {{ansible_hostname}}" state=present
    with_items: groups['all']

  # Idempotent way to build a /etc/hosts file with Ansible using your Ansible hosts inventory for a source.
  # Will include all hosts the playbook is run on.
  # Inspired from http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html
  - name: Build hosts file for all hosts
    lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=present
    when: hostvars[item].ansible_default_ipv4.address is defined
    with_items: groups['all']


- hosts: jenkins_bindle
  sudo: True
  tasks:
  # Install Bindle Dependencies
  - name: make sure JSON perl module is installed
    apt: name=libjson-perl state=latest
  - name: make sure Template perl module is installed
    apt: name=libtemplate-perl state=latest
  - name: make sure "Config::Simple" perl module is installed
    apt: name=libconfig-simple-perl state=latest
  - name: make sure "Carp::Always" perl module is installed
    apt: name=libcarp-always-perl state=latest
  - name: make sure "IPC::System::Simple" perl module is installed
    apt: name=libipc-system-simple-perl state=latest
  - name: make sure make is installed
    apt: name=make state=latest
  - name: make sure gcc is installed
    apt: name=gcc state=latest
  - name: update apt-get
    apt: update-cache=yes
  - name: make sure wget is installed
    apt: name=wget state=latest
  - name: download Vagrant 1.6.3
    get_url: url=https://dl.bintray.com/mitchellh/vagrant/vagrant_1.6.3_x86_64.deb dest=/home/ubuntu mode=0755
  - name: Install Vagrant 1.6.3
    command: sudo dpkg -i vagrant_1.6.3_x86_64.deb
  - name: Install vagrant-aws plugin
    shell: vagrant plugin install vagrant-aws
    sudo_user: ubuntu
  - name: Install vagrant-openstack-plugin
    shell: vagrant plugin install vagrant-openstack-plugin --plugin-version 0.7.0
    sudo_user: ubuntu
  - name: Install cpanm
    shell: curl -L http://cpanmin.us | perl - --sudo App::cpanminus
  - name: make sure HTML::Manipulator is installed
    cpanm: name=HTML::Manipulator
  - name: make sure Net::OpenSSH is installed
    cpanm: name=Net::OpenSSH
  - name: make sure Term::ProgressBar is installed
    cpanm: name=Term::ProgressBar
